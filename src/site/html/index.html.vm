<!-- 

  This file will be preprocessed by the Velocity template engine, which should replace
  the project.groupId strings below.
  
  The rest of this file is in some kind of bastardised crippled HTML.
  
-->
#set( $dollar = "$" )
#set( $repos = "https://repo1.maven.org/maven2/" )
#set( $jarBasename = ${project.artifactId} + "-" + ${project.version} + ".jar" )
#set( $srcBasename = ${project.artifactId} + "-" + ${project.version} + "-sources.jar" )
#set( $distBasename = ${project.artifactId} + "-" + ${project.version} + "-dist.zip" )
#set( $groupIdPath = ${project.groupId} )
#set( $groupIdPath = $groupIdPath.replace(".", "/") )
#set( $jarUrl = $repos + $groupIdPath + "/" + ${project.version} + "/" + $jarBasename )
#set( $srcUrl = $repos + $groupIdPath + "/" + ${project.version} + "/" + $srcBasename )
#set( $distUrl = $repos + $groupIdPath + "/" + ${project.version} + "/" + $distBasename )

<h2>Overview</h2>

<p><b>swagger-combine-maven-plugin</b> is a maven plugin which provides
a pre-processor for combining YAML source files, before those files
are then used to generate even more code 
using the <a href="https://swagger.io/tools/swagger-codegen/">swagger toolchain</a>.

<p>This plugin exists mainly because <code>$ref</code> references are only allowed in one or two places in the 
<a href="https://swagger.io/docs/specification/using-ref/">swagger spec</a>, 
and you may want to import objects in other locations.

<hr/>

<h2>Goals</h2>

<ul>
  <li><a href="./swagger-combine-mojo.html">swagger-combine:swagger-combine</a> combines a bunch of yaml files into a big yaml file
</ul>

<h2>Syntax</h2>

<p>swagger-combine extends the swagger interface definition language with a new <code>$xref</code> referencing method.  

<p>Details on using <b>$xref</b>s can be found on the
<a href="https://github.com/randomnoun/swagger-combine-maven-plugin">github README</a>.
 
<p>Some more specific use cases are described in the examples below.

<h2>Examples</h2>

<ul>
<li><a href="example-1.html">Simple $xref example</a> - resolves <code>$xrefs</code>, but not <code>$refs</code>
<li><a href="example-2.html">Escaping paths example</a> - same as above, but shows how '<code>#</code>' can toggle JSON-Pointer escaping rules 
<li><a href="example-3.html">Override keys example</a> - overriding keys in the imported object
<li><a href="example-4.html">Multiple inputs example</a> - combining multiple input files
<li><a href="example-5.html">Simple $xref example with filtering</a> - maven <code>${dollar}{}</code> substitution during processing 
</ul>

<h2>Usage</h2>

<p>To use this plugin, include it in your <a href="http://maven.apache.org/pom.html">project model</a>

<pre>
&lt;project&gt;
  &lt;build&gt;
    &lt;plugins&gt;

      &lt;plugin&gt;
        &lt;groupId&gt;${project.groupId}&lt;/groupId&gt;
        &lt;artifactId&gt;${project.artifactId}&lt;/artifactId&gt;
        &lt;version&gt;${project.version}&lt;/version&gt;
        
        &lt;executions&gt;
          &lt;execution&gt;
            &lt;id&gt;swagger-combine&lt;/id&gt;
            &lt;phase&gt;generate-sources&lt;/phase&gt;
            &lt;goals&gt;
                &lt;goal&gt;swagger-combine&lt;/goal&gt;
            &lt;/goals&gt;
            &lt;configuration&gt;
              &lt;fileset&gt;
                &lt;includes&gt;
<b>                  &lt;!-- can supply multiple files here or filespecs; e.g. *.yaml --&gt;</b>
<b>                  &lt;include&gt;my-swagger-file-with-xrefs-in-it.yaml&lt;/include&gt;</b>
                &lt;/includes&gt;
                &lt;directory&gt;${dollar}{project.basedir}/src/main/swagger&lt;/directory&gt;
              &lt;/fileset&gt;
              &lt;outputDirectory&gt;${dollar}{project.basedir}/target/swagger-combine&lt;/outputDirectory&gt;
              &lt;!-- use this file as the input to the codegen goal --&gt;
<b>              &lt;finalName&gt;my-swagger-file-with-resolved-xrefs.yaml&lt;/finalName&gt;</b>
            &lt;/configuration&gt;
          &lt;/execution&gt;
        &lt;/executions&gt;
      &lt;/plugin&gt;
            
    &lt;plugins&gt;
  &lt;build&gt;
&lt;project&gt;
</pre>


<h2>License</h2>
<b>swagger-combine</b> is licensed under the <a href="license.html">Simplified BSD 2-clause license</a>.

<!--
Kind of hoping that this works
-->
